package main

import (
	_ "embed"
	"fmt"
	"io"
	"os"
	"strings"

	"github.com/jcchavezs/pakay"
	"github.com/jcchavezs/pakay/view"
	"github.com/spf13/cobra"
)

//go:embed secrets.yaml
var config string

var rootCmd = &cobra.Command{
	Use:  "example",
	Args: cobra.NoArgs,
	PersistentPreRunE: func(cmd *cobra.Command, args []string) error {
		if err := pakay.LoadSecretsFromBytes([]byte(config)); err != nil {
			return fmt.Errorf("loading secrets: %w", err)
		}

		if f, err := os.OpenFile("./SECRETS.md", os.O_RDWR|os.O_CREATE|os.O_TRUNC, 0666); err != nil {
			return fmt.Errorf("opening output file: %w", err)
		} else {
			cmd.SetOut(f)
		}

		return nil
	},
	RunE: func(cmd *cobra.Command, args []string) error {
		ss := view.ListSecrets(cmd.Context())

		cmd.Println("# Secrets List")
		cmd.Println("This file is auto-generated by the pakay library. Do not edit it manually.")
		cmd.Println("It contains a list of secrets available in your application, along with their descriptions and sources.")
		cmd.Println("")
		cmd.Println("## Secrets")
		cmd.Println("The following table lists all the secrets available in your application:")
		cmd.Println("")
		cmd.Println("| Name | Description | Sources |")
		cmd.Println("| -------- | -------- | --------")

		for _, s := range ss {
			fmtSources := make([]string, 0, len(s.Sources()))
			for _, src := range s.Sources() {
				head, tail, _ := strings.Cut(src, ": ")
				fmtSources = append(fmtSources, fmt.Sprintf("%s: `%s`", head, tail))
			}
			cmd.Printf("| **%s** | %s | %s |\n", s.Name(), s.Description(), strings.Join(fmtSources, "<br/>"))
		}

		return nil
	},
	PostRunE: func(cmd *cobra.Command, args []string) error {
		if f, ok := cmd.OutOrStdout().(io.Closer); ok {
			f.Close()
		}

		return nil
	},
}

func main() {
	err := rootCmd.Execute()
	if err != nil {
		fmt.Printf("ERROR: %v\n", err)
		os.Exit(1)
	}
}
